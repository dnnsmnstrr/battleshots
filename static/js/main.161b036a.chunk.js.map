{"version":3,"sources":["hooks/useRadar.js","components/Cell.js","components/Label.js","components/Grid.js","hooks/useWindowDimensions.js","components/SizeInput.js","App.js","reportWebVitals.js","index.js"],"names":["RadarContext","createContext","useRadar","useContext","RadarProvider","children","useState","size","setSize","cells","setCells","updating","setUpdating","initalizeCells","useCallback","defaultCells","Array","fill","useEffect","resetCells","Provider","value","updateSize","newSize","Number","getCellStatus","index","cycleCellStatus","secondary","newCells","currentCellStatus","colors","water","hit","miss","Cell","status","onClick","isHighlighted","className","style","backgroundColor","border","onContextMenu","toChars","n","Math","floor","Label","numeric","Grid","props","hasWindow","window","getWindowDimensions","width","innerWidth","height","innerHeight","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","maxWidth","x","y","highlight","setHighlight","updateHighlight","console","log","grid","totalSize","push","cellType","e","type","buildGrid","layout","map","i","w","h","static","cols","rowHeight","maxRow","margin","idx","data-grid","SizeInput","internalSize","setInternalSize","onSubmit","event","preventDefault","onChange","target","App","document","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.161b036a.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect, useContext, useCallback } from 'react'\n\nexport const RadarContext = createContext({})\nexport const useRadar = () => useContext(RadarContext)\n\nexport const RadarProvider = ({ children }) => {\n  const DEFAULT_GAMESIZE = 6\n  const MAX_SIZE = 12\n  const MIN_SIZE = 2\n  const [size, setSize] = useState(DEFAULT_GAMESIZE)\n  const [cells, setCells] = useState()\n  const [updating, setUpdating] = useState(false)\n\n  const initalizeCells = useCallback(() => {\n    setUpdating(true)\n    setCells([])\n    const defaultCells = new Array(size * size).fill('water')\n    setCells(defaultCells)\n    setUpdating(false)\n  }, [size, setCells])\n\n  useEffect(() => {\n    if (size > 0) {\n      initalizeCells()\n    }\n  }, [size, initalizeCells])\n\n  const updateSize = (newSize) => {\n    if (newSize > MAX_SIZE) {\n      setSize(MAX_SIZE)\n    } else if (newSize < MIN_SIZE) {\n      setSize(MIN_SIZE)\n    } else {\n      setSize(Number(newSize))\n    }\n  }\n\n  const resetCells = useCallback(() => {\n    initalizeCells()\n  }, [initalizeCells])\n\n  const cycleCellStatus = (index, secondary = false) => {\n    const newCells = [...cells]\n    const currentCellStatus = newCells[index]\n\n    switch (currentCellStatus) {\n      case 'hit':\n        newCells[index] = secondary ? 'water' : 'miss'\n        break\n      case 'miss':\n        newCells[index] = secondary ? 'water' : 'hit'\n        break\n      default:\n        newCells[index] = secondary ? 'hit' : 'miss'\n    }\n\n    setCells(newCells)\n  }\n\n  const getCellStatus = (index) => {\n      return cells[index]\n  }\n\n  return (\n    <RadarContext.Provider\n      value={{\n        size,\n        updateSize,\n        updating,\n        cells,\n        resetCells,\n        getCellStatus,\n        cycleCellStatus\n      }}\n    >\n      {children}\n    </RadarContext.Provider>\n  )\n}\n","import React from 'react'\n\nconst colors = {\n  water: 'blue',\n  hit: 'red',\n  miss: 'grey'\n}\n\nconst Cell = ({status, onClick, isHighlighted = false}) => {\n  return (\n    <div className='Cell' style={{backgroundColor: colors[status], border: isHighlighted ? '3px solid black' : '3px solid white'}} onClick={onClick} onContextMenu={onClick}></div>\n  )\n}\n\nexport default Cell\n","import React from 'react'\n\nconst toChars = n => `${n >= 26 ? toChars(Math.floor(n / 26) - 1) : ''}${'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[n % 26]}`;\n\nconst Label = ({index, numeric = false, onClick = () => {}}) => {\n  let value = index\n  if (!numeric) {\n    value = toChars(index - 1)\n  }\n  return (\n    <div className='Label' onClick={() => onClick(index, numeric)}>{value ? value : ''}</div>\n  )\n}\n\nexport default Label\n","import React, {useState} from 'react'\nimport GridLayout from 'react-grid-layout'\n\nimport useWindowDimensions from '../hooks/useWindowDimensions'\nimport {useRadar} from '../hooks/useRadar'\n\nimport Cell from './Cell'\nimport Label from './Label'\n\n\nconst Grid = (props) => {\n  const { height, width } = useWindowDimensions();\n  const maxWidth = (height < width ? height - 100 : width - 50) \n  const {cells = [], size, cycleCellStatus, updating} = useRadar()\n  const [highlight, setHighlight] = useState({x: null, y: null})\n  const updateHighlight = (value, numeric) => {\n    setHighlight({...highlight, ...(numeric ? {y: highlight.y !== value ? value : null} : {x: highlight.x !== value ? value : null})})\n    console.log('highlight', highlight)\n  }\n  const buildGrid = (cells = [], size = 0) => {\n    const totalSize = size + 1\n    const grid = []\n    for (var x = 0; x < totalSize; x++) {\n      for (var y = 0; y < totalSize; y++) {\n        if (x === 0 || y === 0) {\n          grid.push({ cellType: 'label', value: x || y, x, y, onClick: updateHighlight})\n        } else {\n          const index = (x-1)*size + y-1\n          const isHighlighted = highlight.x === x || highlight.y === y\n          grid.push({ cellType: 'water', value: cells[index], x, y, isHighlighted, onClick: (e) => cycleCellStatus(index, e.type === 'contextmenu') })\n        }\n      }\n    }\n    return grid\n  }\n\n  const grid = buildGrid(cells, size)\n\n  if (updating) return\n  const layout = grid.map(({x,y}, i) => ({i, x, y, w: 1, h: 1, static: true}))\n  return (\n    <GridLayout\n      className=\"layout\"\n      cols={size + 1}\n      rowHeight={maxWidth / (size + 1)}\n      maxRow={size + 1}\n      layout={layout}\n      width={maxWidth}\n      margin={[0,5]}\n    >\n      {grid.map(({value, cellType, x, y, onClick, isHighlighted}, idx) => {\n        return <div className='cellContainer' key={idx} data-grid={{x, y, w: 1, h: 1, static: true}}>\n          {cellType === 'label' ? <Label index={value} numeric={!x} onClick={onClick} isHighlighted={isHighlighted} /> : <Cell status={value} onClick={onClick} isHighlighted={isHighlighted}/>}\n        </div>;\n      })}\n    </GridLayout>\n  )\n}\n\nexport default Grid\n","import { useState, useEffect, useCallback } from 'react';\n\nexport default function useWindowDimensions() {\n\n  const hasWindow = typeof window !== 'undefined';\n\n  const getWindowDimensions = useCallback(() => {\n    const width = hasWindow ? window.innerWidth : null;\n    const height = hasWindow ? window.innerHeight : null;\n    return {\n      width,\n      height,\n    };\n  }, [hasWindow]) \n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    if (hasWindow) {\n      function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n      }\n\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [hasWindow, getWindowDimensions]);\n\n  return windowDimensions;\n}\n","import React, {useState} from 'react'\nimport {useRadar} from '../hooks/useRadar'\n\nconst SizeInput = (props) => {\n  const {size, updateSize, resetCells} = useRadar()\n  const [internalSize, setInternalSize] = useState(size)\n\n  const handleChange = (event) => {\n    setInternalSize(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    updateSize(internalSize)\n    event.preventDefault()\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n        <label>\n          Size:\n          <input type=\"number\" value={internalSize} onChange={handleChange} />\n          <input type=\"submit\" value=\"Submit\" />\n          <button type='button' onClick={resetCells}>Reset</button>\n        </label>\n      </form>\n  )\n}\n\nexport default SizeInput\n","import React from 'react'\nimport './App.css';\nimport 'react-grid-layout/css/styles.css'\n\nimport {RadarProvider} from './hooks/useRadar'\nimport Grid from './components/Grid'\nimport SizeInput from './components/SizeInput'\n\nfunction App() {\n  document.addEventListener('contextmenu', function(event){\n    event.preventDefault();\n  })\n\n  return (\n    <RadarProvider>\n      <div className=\"App\" >\n        <div className=\"Container\" >\n          <Grid />\n          <SizeInput />\n        </div>\n      </div>\n    </RadarProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}