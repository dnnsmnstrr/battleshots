[{"/Users/dm/Developer/personal/battleshots/src/index.js":"1","/Users/dm/Developer/personal/battleshots/src/App.js":"2","/Users/dm/Developer/personal/battleshots/src/reportWebVitals.js":"3","/Users/dm/Developer/personal/battleshots/src/hooks/useRadar.js":"4","/Users/dm/Developer/personal/battleshots/src/components/Grid.js":"5","/Users/dm/Developer/personal/battleshots/src/components/SizeInput.js":"6","/Users/dm/Developer/personal/battleshots/src/hooks/useWindowDimensions.js":"7","/Users/dm/Developer/personal/battleshots/src/components/Cell.js":"8","/Users/dm/Developer/personal/battleshots/src/components/Label.js":"9"},{"size":500,"mtime":1615458138239,"results":"10","hashOfConfig":"11"},{"size":493,"mtime":1615464944213,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1615458138239,"results":"13","hashOfConfig":"11"},{"size":1850,"mtime":1615465015075,"results":"14","hashOfConfig":"11"},{"size":1736,"mtime":1615464851649,"results":"15","hashOfConfig":"11"},{"size":738,"mtime":1615459041871,"results":"16","hashOfConfig":"11"},{"size":811,"mtime":1615458138238,"results":"17","hashOfConfig":"11"},{"size":337,"mtime":1615464523101,"results":"18","hashOfConfig":"11"},{"size":425,"mtime":1615462329481,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jogxia",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/Users/dm/Developer/personal/battleshots/src/index.js",[],"/Users/dm/Developer/personal/battleshots/src/App.js",[],"/Users/dm/Developer/personal/battleshots/src/reportWebVitals.js",[],"/Users/dm/Developer/personal/battleshots/src/hooks/useRadar.js",[],"/Users/dm/Developer/personal/battleshots/src/components/Grid.js",["40"],"import React from 'react'\nimport GridLayout, { Responsive } from 'react-grid-layout'\n\nimport useWindowDimensions from '../hooks/useWindowDimensions'\nimport {useRadar} from '../hooks/useRadar'\n\nimport Cell from './Cell'\nimport Label from './Label'\n\nconst buildGrid = (cells = [], size = 0) => {\n  const totalSize = size + 1\n  const grid = []\n  for (var x = 0; x < totalSize; x++) {\n    for (var y = 0; y < totalSize; y++) {\n      if (x === 0 || y === 0) {\n        grid.push({ cellType: 'label', value: x || y, x, y})\n      } else {\n        const index = (x-1)*size + y-1\n        grid.push({ cellType: 'water', value: cells[index], index, x, y })\n      }\n    }\n  }\n  return grid\n}\n\nconst Grid = (props) => {\n  const { height, width } = useWindowDimensions();\n  const maxWidth = (height < width ? height : width) - 30\n  const {cells = [], size, cycleCellStatus, updating} = useRadar()\n  const grid = buildGrid(cells, size)\n\n  if (updating) return\n  const layout = grid.map(({x,y}, i) => ({i, x, y, w: 1, h: 1, static: true}))\n  //{lg: size + 1, md: size + 1, sm: size + 1, xs: size + 1, xxs: size + 1}\n  return (\n    <GridLayout\n      className=\"layout\"\n      cols={size + 1}\n      rowHeight={maxWidth / (size + 1)}\n      maxRow={size + 1}\n      layout={layout}\n      width={maxWidth}\n      margin={[2,2]}\n    >\n      {grid.map(({value, cellType, x, y, index}, idx) => {\n        console.log('idx', idx)\n        return <div className='cellContainer' key={idx} data-grid={{x, y, w: 1, h: 1, static: true}}>\n          {cellType === 'label' ? <Label index={value} numeric={!x} /> : <Cell status={value} onClick={(e) => cycleCellStatus(index, e.type === 'contextmenu')}/>}\n        </div>;\n      })}\n    </GridLayout>\n  )\n}\n\nexport default Grid\n",["41","42"],"/Users/dm/Developer/personal/battleshots/src/components/SizeInput.js",[],"/Users/dm/Developer/personal/battleshots/src/hooks/useWindowDimensions.js",[],"/Users/dm/Developer/personal/battleshots/src/components/Cell.js",[],"/Users/dm/Developer/personal/battleshots/src/components/Label.js",[],{"ruleId":"43","severity":1,"message":"44","line":2,"column":22,"nodeType":"45","messageId":"46","endLine":2,"endColumn":32},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},"no-unused-vars","'Responsive' is defined but never used.","Identifier","unusedVar","no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-global-assign","no-unsafe-negation"]